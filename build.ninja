# Ninja file generated by bang (https://cdelord.fr/bang)

######################################################################
# This file is part of ypp.
#
# ypp is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# ypp is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with ypp.  If not, see <https://www.gnu.org/licenses/>.
#
# For further information about ypp you can visit
# http://cdelord.fr/ypp
######################################################################

builddir = .build

######################################################################
# Compilation
######################################################################

rule luax
  command = luax -q -o $out $in

rule luax-luax
  command = luax -q -t luax -o $out $in

rule luax-lua
  command = luax -q -t lua -o $out $in

rule luax-pandoc
  command = luax -q -t pandoc -o $out $in

build $builddir/ypp: luax src/atexit.lua src/comment.lua src/convert.lua src/doc.lua src/flex.lua src/image.lua src/include.lua src/parser.lua src/q.lua src/script.lua src/when.lua src/ypp.lua $builddir/src/_YPP_VERSION.lua
build $builddir/ypp-luax: luax-luax src/atexit.lua src/comment.lua src/convert.lua src/doc.lua src/flex.lua src/image.lua src/include.lua src/parser.lua src/q.lua src/script.lua src/when.lua src/ypp.lua $builddir/src/_YPP_VERSION.lua
build $builddir/ypp-lua: luax-lua src/atexit.lua src/comment.lua src/convert.lua src/doc.lua src/flex.lua src/image.lua src/include.lua src/parser.lua src/q.lua src/script.lua src/when.lua src/ypp.lua $builddir/src/_YPP_VERSION.lua
build $builddir/ypp-pandoc: luax-pandoc src/atexit.lua src/comment.lua src/convert.lua src/doc.lua src/flex.lua src/image.lua src/include.lua src/parser.lua src/q.lua src/script.lua src/when.lua src/ypp.lua $builddir/src/_YPP_VERSION.lua

rule _builddir_src__YPP_VERSION.lua-827938c04770913a
  command = ( set -eu; echo "--@LOAD"; echo "return [[$$(git describe --tags 2>/dev/null)]]"; ) > $out.tmp && mv $out.tmp $out

build $builddir/src/_YPP_VERSION.lua: _builddir_src__YPP_VERSION.lua-827938c04770913a | .git/refs/tags .git/index

######################################################################
# Documentation
######################################################################

rule README.md-0d34f84ff23366b6
  command = export BUILD=$builddir; export YPP_IMG=doc/img; $builddir/ypp -t svg --MF $builddir/doc/$out.d --MD $in -o $builddir/doc/$out && pandoc --to gfm $builddir/doc/$out -o $out
  depfile = $builddir/doc/$out.d

build README.md: README.md-0d34f84ff23366b6 doc/ypp.md | $builddir/ypp

######################################################################
# Tests
######################################################################

rule diff
  command = diff $in && touch $out

build $builddir/test/test.ok: diff $builddir/test/test.md test/test_ref.md
build $builddir/test/test.d.ok: diff $builddir/test/test.d test/test_ref.d

rule _builddir_test_test.md-0401129bcb67c7c4
  command = export BUILD=$builddir; export YPP_IMG=[$builddir/test/]ypp_images; $builddir/ypp-pandoc -t svg --MT target1 --MT target2 --MD -p test -l test.lua $in -o $out
  depfile = $builddir/test/test.d

build $builddir/test/test.md | $builddir/test/test.d: _builddir_test_test.md-0401129bcb67c7c4 test/test.md | $builddir/ypp-pandoc

######################################################################
# Shortcuts
######################################################################

build compile: phony $builddir/ypp $builddir/ypp-luax $builddir/ypp-lua $builddir/ypp-pandoc
build all: phony compile
build doc: phony README.md
build test: phony $builddir/test/test.ok $builddir/test/test.d.ok

######################################################################
# Installation
######################################################################

prefix = $$HOME/.local

rule install-bin-daf5beff08f39ed0
  description = INSTALL $in to bin
  command = install -v -D -t $${PREFIX:-$prefix}/bin $in

build install-bin: install-bin-daf5beff08f39ed0 $builddir/ypp $builddir/ypp-luax $builddir/ypp-lua $builddir/ypp-pandoc
build install: phony install-bin

######################################################################
# Clean
######################################################################

rule clean-_builddir-e7c9fd42467ee7fb
  description = CLEAN $builddir
  command = rm -rf $builddir/*

build clean-_builddir: clean-_builddir-e7c9fd42467ee7fb
build clean: phony clean-_builddir

######################################################################
# Help
######################################################################

rule help-d5e682ea56ebfcc2
  description = help
  command = echo "ypp"; echo ""; echo "Targets:"; echo "  help      show this help message"; echo "  compile   Compile ypp"; echo "  all       Compile ypp"; echo "  install   Install ypp"; echo "  doc       Generate README.md"; echo "  test      Run ypp tests"; echo "  install   install ypp in $PREFIX or $HOME/.local"; echo "  clean     clean generated files";

build help: help-d5e682ea56ebfcc2
